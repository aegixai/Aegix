import React, { useState, useEffect } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Select, SelectTrigger, SelectItem, SelectContent } from "@/components/ui/select";
import { Line } from "react-chartjs-2";
import "chart.js/auto";
import L from "leaflet";
import { MapContainer, TileLayer, CircleMarker, Tooltip } from "react-leaflet";
import "leaflet/dist/leaflet.css";

const InfluenceDrillDashboard = () => {
  const [data, setData] = useState(null);
  const [selectedKeyword, setSelectedKeyword] = useState("");

  useEffect(() => {
    fetch("/data/influence_drill_data.json")
      .then(res => res.json())
      .then(json => {
        setData(json);
        setSelectedKeyword(json.keywords[0].keyword);
      });
  }, []);

  if (!data) return <p>Loading...</p>;

  const selected = data.keywords.find(k => k.keyword === selectedKeyword);

  const lineData = {
    labels: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
    datasets: [
      {
        label: `${selectedKeyword} Mentions`,
        data: selected.daily_trend,
        fill: false,
        borderColor: "#4f46e5",
        tension: 0.3,
      },
    ],
  };

  const mapCenter = [34.8, 32.08]; // Default: Tel Aviv
  const mapZoom = 2;

  return (
    <Card className="p-6 space-y-6">
      <CardContent>
        <h2 className="text-xl font-bold mb-4">üì° Influence Drill Dashboard</h2>

        <div className="flex gap-6 mb-6">
          <Select value={selectedKeyword} onValueChange={setSelectedKeyword}>
            <SelectTrigger className="w-60">{selectedKeyword}</SelectTrigger>
            <SelectContent>
              {data.keywords.map((k, idx) => (
                <SelectItem key={idx} value={k.keyword}>
                  {k.keyword}
                </SelectItem>
              ))}
            </SelectContent>
          </Select>

          <div className="w-1/2">
            <Line data={lineData} />
          </div>
        </div>

        <div className="grid grid-cols-2 gap-6">
          <div>
            <h3 className="font-semibold text-gray-700 mb-2">üåç Geo Heatmap</h3>
            <MapContainer center={mapCenter} zoom={mapZoom} style={{ height: 300 }}>
              <TileLayer
                url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
                attribution="¬© OpenStreetMap"
              />
              {selected.geo_distribution.features.map((f, idx) => (
                <CircleMarker
                  key={idx}
                  center={[f.geometry.coordinates[1], f.geometry.coordinates[0]]}
                  radius={Math.sqrt(f.properties.count) * 2}
                  fillOpacity={0.6}
                  color="#f87171"
                >
                  <Tooltip>
                    Mentions: {f.properties.count}
                  </Tooltip>
                </CircleMarker>
              ))}
            </MapContainer>
          </div>

          <div>
            <h3 className="font-semibold text-gray-700 mb-2">üèÜ Top Influencers</h3>
            <ul className="space-y-2">
              {selected.influencers.map((inf, i) => (
                <li key={i} className="border p-2 rounded shadow-sm bg-white">
                  <strong>{inf.name}</strong> ‚Äì {inf.mentions} mentions ({inf.country})
                </li>
              ))}
            </ul>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default InfluenceDrillDashboard;
